<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>PE Example</title>
    <script src="JS/PE/sylvester.js" type="text/javascript"></script>
    <script src="JS/PE/easel.js" type="text/javascript"></script>
    <script src="JS/PE/class.min.js" type="text/javascript"></script>
    <script src="JS/PE/PE.js" type="text/javascript"></script>
    <script src="JS/PE/ObjectRender.js" type="text/javascript"></script>
    <script src="JS/PE/Shape/Body.js" type="text/javascript"></script>
    <script src="JS/PE/Shape/Circle.js" type="text/javascript"></script>
    <script src="JS/PE/Math/Vector2.js" type="text/javascript"></script>
    <script src="JS/PE/Shape/Rect.js" type="text/javascript"></script>
    <script src="JS/PE/CollisionManagement.js" type="text/javascript"></script>
    <script src="JS/PE/Math/Line.js" type="text/javascript"></script>
    <script src="JS/PE/Math/Math.js" type="text/javascript"></script>
    <script src="JS/PE/World.js" type="text/javascript"></script>
    <script src="JS/PE/BodyCounter.js" type="text/javascript"></script>
    <script>
        var fpsLabel;     
        var stage;
        var m = PE.Math;
        function init() {
            var canvas = document.getElementById("testCanvas");
            
            stage = new Stage(canvas);
             PE.World.gravity = new PE.Vector2(0, 400);
   
             fpsLabel = new Text("-- fps", "bold 14px Arial", "#000");
             stage.addChild(fpsLabel);
             fpsLabel.x = 10;
             fpsLabel.y = 20;
            for (var i = 0; i < 11; i++) {
                var circle = new PE.Circle();
                circle.speed = new PE.Vector2(m.getRandomNumber(0, 200), m.getRandomNumber(0, 200));
                circle.radius = 24;
                circle.mass = 20;
                circle.imgUrl = "img/ball.png";
                circle.palstance = 0;
                circle.friction = 0.5;
                circle.restitution = 0.4;
                circle.position = new PE.Vector2(m.getRandomNumber(390, 400), m.getRandomNumber(0, 20));
            }

          var  rect1 = new PE.Rect();
            rect1.position = new PE.Vector2(240, 320);
            rect1.width = 440;
            rect1.height = 20;
            rect1.bodyType = PE.BodyType.Static;
            rect1.friction = 0.1;
            rect1.palstance = 0;
            rect1.restitution = 0.4;
            rect1.rotation = 16;

            var rect2 = new PE.Rect();
            rect2.position = new PE.Vector2(490, 160);
            rect2.width = 440;
            rect2.height = 20;
            rect2.restitution = 0.4;
            rect2.bodyType = PE.BodyType.Static;
            rect2.friction = 0.1;
            rect2.palstance = 0;
            rect2.rotation = -16;

            var rect3 = new PE.Rect();
            rect3.position = new PE.Vector2(560, 455);
            rect3.width = 440;
            rect3.height = 20;
            rect3.bodyType = PE.BodyType.Static;
            rect3.friction = 0.1;
            rect3.palstance = 0;
            rect3.rotation = -16;
            rect3.restitution = 0.4;
          
            Ticker.addListener(window);
            Ticker.setFPS(60);
        }
        function tick() {
            PE.ObjectRender.update(1.0 / 60, stage);

            fpsLabel.text = Math.round(Ticker.getMeasuredFPS()) + " fps";
        }

   
    </script>
</head>
<body onload="init();">
    <div id="rectInfo">
    </div>
    <div class="description">
        <h1>
            Hello PE example !</h1>
    </div>
    <div class="canvasHolder">
        <canvas id="testCanvas" width="1980" height="1580"></canvas>
    </div>
</body>
</html>
